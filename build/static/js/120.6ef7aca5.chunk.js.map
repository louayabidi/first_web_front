{"version":3,"file":"static/js/120.6ef7aca5.chunk.js","mappings":"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","sources":["components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { ServiceContext } from \"../context/ServiceContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./AdminDashboard.css\";\r\nimport API_BASE_URL from \"../services/api\"; \r\n\r\nfunction AdminDashboard() {\r\n  const { user, logout } = useContext(AuthContext);\r\n  const { triggerRefresh } = useContext(ServiceContext);\r\n  const navigate = useNavigate();\r\n\r\n  const [services, setServices] = useState([]);\r\n  const [form, setForm] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    link: \"\",\r\n    image: null,\r\n    isActive: true,\r\n  });\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  // ✅ Fetch services\r\n  const fetchServices = useCallback(async () => {\r\n    try {\r\n      const res = await axios.get(`${API_BASE_URL}/api/services`, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n      });\r\n      setServices(res.data.services);\r\n    } catch (err) {\r\n      setError(\"Failed to fetch services\");\r\n      console.error(err);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!user || user.role !== \"admin\") {\r\n      navigate(\"/login\");\r\n    } else {\r\n      fetchServices();\r\n    }\r\n  }, [user, navigate, fetchServices]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, type, value, files, checked } = e.target;\r\n    if (type === \"file\") {\r\n      setForm({ ...form, image: files[0] });\r\n    } else if (type === \"checkbox\") {\r\n      setForm({ ...form, isActive: checked });\r\n    } else {\r\n      setForm({ ...form, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", form.title);\r\n    formData.append(\"description\", form.description);\r\n    if (form.link) formData.append(\"link\", form.link);\r\n    // Send boolean as string to avoid backend issues\r\n    formData.append(\"isActive\", form.isActive ? \"true\" : \"false\");\r\n    if (form.image) formData.append(\"image\", form.image);\r\n\r\n    try {\r\n      if (editingId) {\r\n        await axios.put(`${API_BASE_URL}/api/services/${editingId}`, formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        });\r\n        setSuccess(\"✅ Service updated successfully!\");\r\n      } else {\r\n        await axios.post(`${API_BASE_URL}/api/services`, formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        });\r\n        setSuccess(\"✅ Service added successfully!\");\r\n      }\r\n\r\n      setForm({ title: \"\", description: \"\", link: \"\", image: null, isActive: true });\r\n      setEditingId(null);\r\n      document.getElementById(\"image-input\").value = \"\";\r\n      fetchServices();\r\n      triggerRefresh();\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || \"Failed to save service\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (service) => {\r\n    setForm({\r\n      title: service.title,\r\n      description: service.description,\r\n      link: service.link || \"\",\r\n      image: null,\r\n      isActive: service.isActive,\r\n    });\r\n    setEditingId(service._id);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`${API_BASE_URL}/api/services/${id}`, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n      });\r\n      setSuccess(\"✅ Service deleted successfully!\");\r\n      fetchServices();\r\n      triggerRefresh();\r\n    } catch (err) {\r\n      setError(\"Failed to delete service\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"admin-dashboard\">\r\n      <div className=\"admin-header\">\r\n        <h1>Admin Dashboard</h1>\r\n        <button onClick={logout}>Logout</button>\r\n      </div>\r\n\r\n      <h2>{editingId ? \"Edit Service\" : \"Add Service\"}</h2>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {success && <p className=\"success\">{success}</p>}\r\n\r\n      <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n        <label>\r\n          Title\r\n          <input type=\"text\" name=\"title\" value={form.title} onChange={handleChange} required />\r\n        </label>\r\n\r\n        <label>\r\n          Description\r\n          <textarea name=\"description\" value={form.description} onChange={handleChange} required />\r\n        </label>\r\n\r\n        <label>\r\n          Link\r\n          <input type=\"text\" name=\"link\" value={form.link} onChange={handleChange} placeholder=\"Optional\" />\r\n        </label>\r\n\r\n        <label>\r\n          Image\r\n          <input id=\"image-input\" type=\"file\" name=\"image\" accept=\"image/*\" onChange={handleChange} required={!editingId} />\r\n        </label>\r\n\r\n        <label>\r\n          Active\r\n          <input type=\"checkbox\" name=\"isActive\" checked={form.isActive} onChange={handleChange} />\r\n        </label>\r\n\r\n        <button type=\"submit\">{editingId ? \"Update\" : \"Add\"} Service</button>\r\n      </form>\r\n\r\n      <h2>Services List</h2>\r\n      <div className=\"services-list\">\r\n        {services.map((service) => (\r\n          <div key={service._id} className=\"service-item\">\r\n            {service.image && <img src={`${API_BASE_URL}${service.image}`} alt={service.title} />}\r\n            <h3>{service.title}</h3>\r\n            <p>{service.description}</p>\r\n            {service.link && <p>Link: {service.link}</p>}\r\n            <p>Status: {service.isActive ? \"Active\" : \"Inactive\"}</p>\r\n            <button onClick={() => handleEdit(service)}>Edit</button>\r\n            <button onClick={() => handleDelete(service._id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"names":["user","logout","useContext","AuthContext","triggerRefresh","ServiceContext","navigate","useNavigate","services","setServices","useState","form","setForm","title","description","link","image","isActive","editingId","setEditingId","error","setError","success","setSuccess","fetchServices","useCallback","async","res","axios","get","API_BASE_URL","headers","Authorization","localStorage","getItem","data","err","console","useEffect","role","handleChange","e","name","type","value","files","checked","target","_jsxs","className","children","_jsx","onClick","onSubmit","preventDefault","formData","FormData","append","put","post","document","getElementById","_err$response","_err$response$data","response","encType","onChange","required","placeholder","id","accept","map","service","src","alt","_id","handleEdit","delete","handleDelete"],"sourceRoot":""}