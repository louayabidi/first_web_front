{"version":3,"file":"static/js/146.491f8b7c.chunk.js","mappings":"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","sources":["pages/AuthPage.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport './Auth.css';\r\nimport logo from '../assets/logo.png';\r\n\r\nconst AuthPage = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [form, setForm] = useState({ name: '', email: '', password: '' });\r\n  const [status, setStatus] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const { login, signup } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!form.email || !form.password || (!isLogin && !form.name)) {\r\n      setStatus('‚ùå Veuillez remplir tous les champs obligatoires.');\r\n      return;\r\n    }\r\n\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(form.email)) {\r\n      setStatus('‚ùå Format d‚Äôemail invalide.');\r\n      return;\r\n    }\r\n\r\n    if (form.password.length < 6) {\r\n      setStatus('‚ùå Le mot de passe doit contenir au moins 6 caract√®res.');\r\n      return;\r\n    }\r\n\r\n    setStatus('üîÑ Traitement en cours...');\r\n\r\n    try {\r\n      if (isLogin) {\r\n        await login(form.email, form.password);\r\n        navigate(form.email === process.env.REACT_APP_ADMIN_EMAIL ? '/admin' : '/');\r\n      } else {\r\n        await signup(form.name, form.email, form.password);\r\n        setIsLogin(true); // Switch to login after signup\r\n      }\r\n\r\n      setForm({ name: '', email: '', password: '' });\r\n      setStatus('‚úÖ Success');\r\n    } catch (error) {\r\n      const errMsg = error.response?.data?.error || 'Une erreur s‚Äôest produite. Veuillez r√©essayer.';\r\n      setStatus('‚ùå ' + errMsg);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <img src={logo} alt=\"Logo\" className=\"auth-logo\" />\r\n        <h1>{isLogin ? 'Se connecter' : 'S‚Äôinscrire'}</h1>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          {!isLogin && (\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Nom\"\r\n              value={form.name}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          )}\r\n\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={form.email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n\r\n          <div className=\"password-field\">\r\n            <input\r\n              type={showPassword ? 'text' : 'password'}\r\n              name=\"password\"\r\n              placeholder=\"Mot de passe\"\r\n              value={form.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <span\r\n              className=\"toggle-password\"\r\n              onClick={() => setShowPassword(!showPassword)}\r\n              title={showPassword ? 'Hide Password' : 'Show Password'}\r\n              style={{ cursor: 'pointer' }}\r\n            >\r\n              {showPassword ? 'üôà' : 'üëÅÔ∏è'}\r\n            </span>\r\n          </div>\r\n\r\n          {isLogin && (\r\n            <div className=\"forgot-password\">\r\n              <span\r\n                onClick={() => navigate('/forgot')}\r\n                className=\"toggle-link\"\r\n                style={{ cursor: 'pointer' }}\r\n              >\r\n                Mot de passe oubli√© ?\r\n              </span>\r\n            </div>\r\n          )}\r\n\r\n          <button type=\"submit\">{isLogin ? 'Connexion' : 'S‚Äôinscrire'}</button>\r\n        </form>\r\n\r\n        {status && <p className=\"status-message\">{status}</p>}\r\n\r\n        <p>\r\n          {isLogin ? 'Vous n‚Äôavez pas de compte‚ÄØ?' : 'Vous avez d√©j√† un compte‚ÄØ?'}{' '}\r\n          <span\r\n            onClick={() => setIsLogin(!isLogin)}\r\n            className=\"toggle-link\"\r\n            style={{ cursor: 'pointer' }}\r\n          >\r\n            {isLogin ? 'S‚Äôinscrire' : 'Connexion'}\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPage;"],"names":["AuthPage","isLogin","setIsLogin","useState","form","setForm","name","email","password","status","setStatus","showPassword","setShowPassword","login","signup","useContext","AuthContext","navigate","useNavigate","handleChange","e","target","value","_jsx","className","children","_jsxs","src","logo","alt","onSubmit","async","preventDefault","test","length","process","REACT_APP_ADMIN_EMAIL","error","_error$response","_error$response$data","errMsg","response","data","type","placeholder","onChange","required","onClick","title","style","cursor"],"sourceRoot":""}