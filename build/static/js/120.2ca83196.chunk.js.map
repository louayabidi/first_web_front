{"version":3,"file":"static/js/120.2ca83196.chunk.js","mappings":"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","sources":["components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { ServiceContext } from '../context/ServiceContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './AdminDashboard.css';\r\nimport API_BASE_URL from \"../services/api\";\r\n\r\nfunction AdminDashboard() {\r\n  const { user, logout } = useContext(AuthContext);\r\n  const { triggerRefresh } = useContext(ServiceContext);\r\n  const navigate = useNavigate();\r\n  const [services, setServices] = useState([]);\r\n  const [form, setForm] = useState({\r\n    title: '',\r\n    description: '',\r\n    link: '',\r\n    image: null,\r\n    isActive: true,\r\n  });\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!user || user.role !== 'admin') {\r\n      navigate('/login');\r\n    } else {\r\n      fetchServices();\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  const fetchServices = async () => {\r\n    try {\r\n      const res = await axios.get(`${API_BASE_URL}/api/services`, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\r\n      });\r\n      setServices(res.data.services);\r\n    } catch (err) {\r\n      setError('Failed to fetch services');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, type, value, files, checked } = e.target;\r\n    if (type === 'file') {\r\n      setForm({ ...form, image: files[0] });\r\n    } else if (type === 'checkbox') {\r\n      setForm({ ...form, isActive: checked });\r\n    } else {\r\n      setForm({ ...form, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    const formData = new FormData();\r\n    formData.append('title', form.title);\r\n    formData.append('description', form.description);\r\n    if (form.link) formData.append('link', form.link); \r\n    formData.append('isActive', form.isActive);\r\n    if (form.image) formData.append('image', form.image);\r\n\r\n    try {\r\n      if (editingId) {\r\n        await axios.put(`${API_BASE_URL}/api/services/${editingId}`, formData,  {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        });\r\n        setSuccess('Service updated successfully!');\r\n      } else {\r\n        await axios.post(`${API_BASE_URL}/api/services`, formData, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        });\r\n        setSuccess('Service added successfully!');\r\n      }\r\n      setForm({ title: '', description: '', link: '', image: null, isActive: true });\r\n      setEditingId(null);\r\n      document.getElementById('image-input').value = '';\r\n      fetchServices();\r\n      triggerRefresh();\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Failed to save service');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (service) => {\r\n    setForm({\r\n      title: service.title,\r\n      description: service.description,\r\n      link: service.link,\r\n      image: null,\r\n      isActive: service.isActive,\r\n    });\r\n    setEditingId(service._id);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`${API_BASE_URL}/api/services/${id}`,  {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\r\n      });\r\n      setSuccess('Service deleted successfully!');\r\n      fetchServices();\r\n      triggerRefresh();\r\n    } catch (err) {\r\n      setError('Failed to delete service');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"admin-dashboard\">\r\n      <div className=\"admin-header\">\r\n        <h1>Admin Dashboard</h1>\r\n        <button onClick={logout}>Logout</button>\r\n      </div>\r\n\r\n      <h2>{editingId ? 'Edit Service' : 'Add Service'}</h2>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {success && <p className=\"success\">{success}</p>}\r\n\r\n      <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n        <label>\r\n          Title\r\n          <input type=\"text\" name=\"title\" value={form.title} onChange={handleChange} required />\r\n        </label>\r\n\r\n        <label>\r\n          Description\r\n          <textarea name=\"description\" value={form.description} onChange={handleChange} required />\r\n        </label>\r\n\r\n       <label>\r\n  Link\r\n  <input\r\n    type=\"text\"\r\n    name=\"link\"\r\n    value={form.link}\r\n    onChange={handleChange}\r\n    placeholder=\"Optionnel\"\r\n  />\r\n</label>\r\n\r\n\r\n        <label>\r\n          Image\r\n          <input\r\n            id=\"image-input\"\r\n            type=\"file\"\r\n            name=\"image\"\r\n            accept=\"image/*\"\r\n            onChange={handleChange}\r\n            required={!editingId}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Active\r\n          <input type=\"checkbox\" name=\"isActive\" checked={form.isActive} onChange={handleChange} />\r\n        </label>\r\n\r\n        <button type=\"submit\">{editingId ? 'Update' : 'Add'} Service</button>\r\n      </form>\r\n\r\n      <h2>Services List</h2>\r\n      <div className=\"services-list\">\r\n        {services.map((service) => (\r\n          <div key={service._id} className=\"service-item\">\r\n            <img src={`http://localhost:5000${service.image}`} alt={service.title} />\r\n            <h3>{service.title}</h3>\r\n            <p>{service.description}</p>\r\n            <p>Link: {service.link}</p>\r\n            <p>Status: {service.isActive ? 'Active' : 'Inactive'}</p>\r\n            <button onClick={() => handleEdit(service)}>Edit</button>\r\n            <button onClick={() => handleDelete(service._id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"names":["user","logout","useContext","AuthContext","triggerRefresh","ServiceContext","navigate","useNavigate","services","setServices","useState","form","setForm","title","description","link","image","isActive","editingId","setEditingId","error","setError","success","setSuccess","useEffect","role","fetchServices","async","res","axios","get","API_BASE_URL","headers","Authorization","localStorage","getItem","data","err","console","handleChange","e","name","type","value","files","checked","target","_jsxs","className","children","_jsx","onClick","onSubmit","preventDefault","formData","FormData","append","put","post","document","getElementById","_err$response","_err$response$data","response","encType","onChange","required","placeholder","id","accept","map","service","src","alt","_id","handleEdit","delete","handleDelete"],"sourceRoot":""}