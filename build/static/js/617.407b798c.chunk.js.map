{"version":3,"file":"static/js/617.407b798c.chunk.js","mappings":"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","sources":["../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-dom/dist/es/animation/utils/make-animation-instant.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-html-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-svg-visual-state.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/motion-utils/dist/es/is-object.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/animation/utils/calc-child-stagger.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs"],"sourcesContent":["const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","function makeAnimationInstant(options) {\n    options.duration = 0;\n    options.type === \"keyframes\";\n}\n\nexport { makeAnimationInstant };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`, \"color-not-animatable\");\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, \"complex-values-different\");\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\", \"spring-duration-limit\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticeably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`, \"cubic-bezier-length\");\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`, \"invalid-easing-type\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\", \"range-length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`, \"spring-two-frames\");\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `Mini animate() doesn't support \"type\" as a string.`, \"mini-spring\");\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys that might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    const subject = motionValue?.owner?.current;\n    /**\n     * We use this check instead of isHTMLElement() because we explicitly\n     * **don't** want elements in different timing contexts (i.e. popups)\n     * to be accelerated, as it's not possible to sync these animations\n     * properly with those driven from the main window frameloop.\n     */\n    if (!(subject instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { makeAnimationInstant } from './utils/make-animation-instant.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            makeAnimationInstant(options);\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". \"${isOriginAnimatable ? targetKeyframe : originKeyframe}\" is not an animatable value.`, \"value-not-animatable\");\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, makeAnimationInstant, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        makeAnimationInstant(options);\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        makeAnimationInstant(options);\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { calcChildStagger } from '../utils/calc-child-stagger.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    for (const child of visualElement.variantChildren) {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (typeof delayChildren === \"function\" ? 0 : delayChildren) +\n                calcChildStagger(visualElement.variantChildren, child, delayChildren, staggerChildren, staggerDirection),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    }\n    return Promise.all(animations);\n}\n\nexport { animateVariant };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v) {\n        if (!this.passiveEffect) {\n            this.updateAndNotify(v);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`, \"max-css-var-depth\");\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone, microtask } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key]);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\", \"reduced-motion-disabled\");\n        }\n        this.parent?.addChild(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent?.removeChild(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    addChild(child) {\n        this.children.add(child);\n        this.enteringChildren ?? (this.enteringChildren = new Set());\n        this.enteringChildren.add(child);\n    }\n    removeChild(child) {\n        this.children.delete(child);\n        this.enteringChildren && this.enteringChildren.delete(child);\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n            this.scheduleRender();\n        });\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n    scheduleRenderMicrotask() {\n        microtask.render(this.render);\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction useRender(Component, props, ref, { latestValues, }, isStatic, forwardMotionProps = false) {\n    const useVisualProps = isSVGComponent(Component)\n        ? useSVGProps\n        : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Component !== Fragment ? { ...filteredProps, ...visualProps, ref } : {};\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const { children } = props;\n    const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n    return createElement(Component, {\n        ...elementProps,\n        children: renderedChildren,\n    });\n}\n\nexport { useRender };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\n\nexport { makeUseVisualState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useHTMLVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState,\n});\n\nexport { useHTMLVisualState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useSVGVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n});\n\nexport { useSVGVisualState };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement =\n        createVisualElement ||\n            lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        visualElement.scheduleRenderMicrotask();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n        /**\n         * Now we've finished triggering animations for this element we\n         * can wipe the enteringChildren set for the next render.\n         */\n        visualElement.enteringChildren = undefined;\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { useRender } from '../render/dom/use-render.mjs';\nimport { isSVGComponent } from '../render/dom/utils/is-svg-component.mjs';\nimport { useHTMLVisualState } from '../render/html/use-html-visual-state.mjs';\nimport { useSVGVisualState } from '../render/svg/use-svg-visual-state.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    const useVisualState = isSVGComponent(Component)\n        ? useSVGVisualState\n        : useHTMLVisualState;\n    function MotionDOMComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)] }));\n    }\n    MotionDOMComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionDOMComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage, \"lazy-strict-mode\")\n            : invariant(false, strictMessage, \"lazy-strict-mode\");\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { warnOnce } from 'motion-utils';\nimport { createMotionComponent } from '../../motion/index.mjs';\n\nfunction createMotionProxy(preloadedFeatures, createVisualElement) {\n    if (typeof Proxy === \"undefined\") {\n        return createMotionComponent;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const factory = (Component, options) => {\n        return createMotionComponent(Component, options, preloadedFeatures, createVisualElement);\n    };\n    /**\n     * Support for deprecated`motion(Component)` pattern\n     */\n    const deprecatedFactoryFunction = (Component, options) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return factory(Component, options);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return factory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, createMotionComponent(key, undefined, preloadedFeatures, createVisualElement));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { calcChildStagger } from '../../animation/utils/calc-child-stagger.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => {\n                    const options = { type };\n                    /**\n                     * If we're performing the initial animation, but we're not\n                     * rendering at the same time as the variant-controlling parent,\n                     * we want to use the parent's transition to calculate the stagger.\n                     */\n                    if (typeof animation === \"string\" &&\n                        isInitialRender &&\n                        !willAnimateViaParent &&\n                        visualElement.manuallyAnimateOnMount &&\n                        visualElement.parent) {\n                        const { parent } = visualElement;\n                        const parentVariant = resolveVariant(parent, animation);\n                        if (parent.enteringChildren && parentVariant) {\n                            const { delayChildren } = parentVariant.transition || {};\n                            options.delay = calcChildStagger(parent.enteringChildren, visualElement, delayChildren);\n                        }\n                    }\n                    return {\n                        animation: animation,\n                        options,\n                    };\n                }));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\", \"drag-constraints-ref\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n *\n * Difficult to capture in a test but to prevent flickering\n * we must set this to true either on update or unmount.\n * Running `next-env/layout-id` in Safari will show this behaviour if broken.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        hasTakenAnySnapshot = true;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { createDomVisualElement } from '../../dom/create-visual-element.mjs';\nimport { createMotionProxy } from '../create-proxy.mjs';\nimport { featureBundle } from './feature-bundle.mjs';\n\nconst motion = /*@__PURE__*/ createMotionProxy(featureBundle, createDomVisualElement);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n\nexport { featureBundle };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","import { formatErrorMessage } from './format-error-message.mjs';\n\nlet warning = () => { };\nlet invariant = () => { };\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message, errorCode) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(formatErrorMessage(message, errorCode));\n        }\n    };\n    invariant = (check, message, errorCode) => {\n        if (!check) {\n            throw new Error(formatErrorMessage(message, errorCode));\n        }\n    };\n}\n\nexport { invariant, warning };\n","function calcChildStagger(children, child, delayChildren, staggerChildren = 0, staggerDirection = 1) {\n    const index = Array.from(children)\n        .sort((a, b) => a.sortNodePosition(b))\n        .indexOf(child);\n    const numChildren = children.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    return delayIsFunction\n        ? delayChildren(index, numChildren)\n        : staggerDirection === 1\n            ? index * staggerChildren\n            : maxStaggerDuration - index * staggerChildren;\n}\n\nexport { calcChildStagger };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { invariant } from 'motion-utils';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls, setValues };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { animationControls } from './animation-controls.mjs';\n\n/**\n * Creates `LegacyAnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `LegacyAnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n"],"names":["clamp","min","max","v","resolveVariant","visualElement","definition","custom","props","getProps","resolveVariantFromProps","undefined","useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","positionalKeys","Set","transformPropOrder","number","test","parse","parseFloat","transform","alpha","scale","default","isNumOrPxType","px","transformKeys","nonTranslationalTransformKeys","filter","key","has","removeNonTranslationalTransform","removedTransforms","forEach","value","getValue","push","get","set","startsWith","positionalValues","width","_ref","_ref2","x","paddingLeft","paddingRight","height","_ref3","_ref4","y","paddingTop","paddingBottom","top","_bbox","_ref5","left","_ref6","bottom","_ref7","_ref8","right","_ref9","_ref0","_ref1","parseValueFromTransform","_ref10","translateX","translateY","optimizedAppearDataAttribute","camelToDash","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","arguments","length","add","cancel","delete","process","frameData","statsBuffer","frameloop","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","MotionGlobalConfig","useManualTiming","performance","now","Math","keepAlive","immediate","i","isKeyframesTarget","Array","isArray","reverseEasing","easing","p","mixNumber","from","to","progress","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","str","replace","toLowerCase","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","values","indexes","color","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","type","sanitize","convertNumbersToZero","getAnimatableNone","complex","isNaN","match","floatRegex","parsed","transformer","map","toFromDifference","circIn","sin","acos","circOut","circInOut","mirrorEasing","radToDeg","rad","PI","rotate","angle","atan2","rebaseAngle","matrix2dParsers","scaleX","scaleY","abs","rotateZ","skewX","atan","skewY","skew","sqrt","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","readTransformValue","instance","getComputedStyle","hsla","isColorString","splitColor","hue","saturation","lightness","alpha$1","round","percent","setMotionValue","hasValue","addValue","motionValue","resolveFinalValueInKeyframes","setTarget","resolved","transitionEnd","transition","target","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","isMotionValue","Boolean","getVelocity","window","noop","any","velocityPerSecond","velocity","frameDuration","useConstant","init","ref","useRef","current","hex","r","g","b","a","substring","red","parseInt","green","blue","rgba","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","Map","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","flushKeyframeResolvers","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","isAsync","this","scheduleResolve","frame","currentValue","finalKeyframe","valueAsRead","readValue","keyframes","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","makeAnimationInstant","options","duration","hueToRgb","q","t","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","find","warning","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","template","originStats","targetStats","mixVisibility","pipe","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","start","stop","cancelFrame","time","generateLinearEasing","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","c","exp","d","e","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","root","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","ease","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","backOut","backIn","backInOut","anticipate","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","invariant","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","isNotNull","getFinalKeyframe","repeat","repeatType","speed","resolvedKeyframes","index","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","Promise","resolve","notifyFinished","then","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","currentTime","holdTime","playbackSpeed","updatedAt","tick","teardown","onStop","activeAnimations","mainThread","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","newTime","driver","newSpeed","hasChanged","onPlay","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","waapi","fill","iterations","direction","animation","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","onfinish","keyframe","updateMotionValue","isCSSVar","style","setProperty","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","setWithVelocity","isAnimatable","acceleratedValues","supportsWaapi","Object","hasOwnProperty","call","Element","prototype","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","subject","owner","HTMLElement","transformTemplate","supportsBrowserAnimation","catch","pendingTimeline","_onReject","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","animateMotionValue","valueTransition","getValueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","assign","shouldSkip","skipAnimations","isSync","addValueToWillChange","willChange","WillChange","newWillChange","SubscriptionManager","subscriptions","handler","addUniqueItem","removeItem","notify","numSubscriptions","getSize","getOptimisedAppearId","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","animationState","getState","latestValues","valueTarget","isAnimating","MotionHandoffAnimation","appearId","shouldReduceMotion","all","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","child","calcChildStagger","animateChildren","first","last","animateVisualElement","resolvedDefinition","addProjectionMetrics","clearTime","queueMicrotask","collectMotionValues","MotionValue","canTrackVelocity","events","updateAndNotify","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","endAnimation","addDependent","removeDependent","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","destroy","createUnitType","unit","endsWith","degrees","vh","vw","progressPercentage","rgbUnit","clampRgbUnit","getValueState","variants","frameSteps","requestAnimationFrame","singleColorRegex","testProp","isNullish","aName","bName","cName","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","point","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","originX","originY","measureViewportBox","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","testValueType","dimensionValueTypes","findDimensionValueType","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","token1","token2","parseCSSVariable","getPropertyValue","trimmed","isZeroValueString","isNone","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","int","transformValueTypes","scaleZ","perspective","transformPerspective","originZ","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","valueTypes","microtask","cancelMicrotask","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","createBox","prefersReducedMotion","hasReducedMotionListener","visualElementStore","WeakMap","isAnimationControls","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","parent","reducedMotionConfig","blockInitialAnimation","visualState","children","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderState","projection","renderScheduledAt","scheduleRender","baseTarget","initialValues","initial","manuallyAnimateOnMount","initialMotionValues","mount","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addEventListener","initPrefersReducedMotion","addChild","unmount","remove","removeChild","feature","isMounted","enteringChildren","valueIsTransform","onBindTransform","removeOnChange","latestValue","isTransformDirty","removeSyncCheck","MotionCheckAppearSync","sortNodePosition","other","sortInstanceNodePosition","updateFeatures","featureDefinition","Feature","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","prevProps","prevPresenceContext","listener","nextValue","prevValue","existingValue","liveStyle","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getTransformPagePoint","transformPagePoint","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","_len","args","_key","scheduleRenderMicrotask","DOMVisualElement","compareDocumentPosition","vars","childSubscription","textContent","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","transformOrigin","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","renderHTML","styleProp","elementStyle","applyProjectionStyles","scaleCorrectors","isForcedMotionValue","layoutId","newValues","HTMLVisualElement","isProjecting","computedStyle","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","spacing","useDashCase","buildSVGPath","camelCaseAttributes","tag","scrapeMotionValuesFromProps$1","indexOf","charAt","toUpperCase","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","tagName","lowercaseSVGElements","isSVGComponent","Component","createDomVisualElement","allowProjection","Fragment","LayoutGroupContext","createContext","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","PresenceContext","resolveMotionValue","makeLatestValues","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","makeUseVisualState","config","make","createRenderState","makeState","useHTMLVisualState","useSVGVisualState","motionComponentSymbol","Symbol","for","isRefObject","useMotionRef","externalRef","useCallback","onMount","SwitchLayoutGroupContext","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","visualElementRef","renderer","initialLayoutGroupConfig","initialPromotionConfig","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","animateChanges","MotionHandoffMarkAsComplete","createMotionComponent","preloadedFeatures","loadFeatures","useVisualState","MotionDOMComponent","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","jsx","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","id","createMotionProxy","Proxy","componentCache","factory","deprecatedFactoryFunction","_target","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","willAnimateViaParent","parentVariant","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","node","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pageX","pageY","addPointerEvent","addPointerInfo","calcLength","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","distanceThreshold","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","latestPointerEvent","latestPanInfo","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","finalEvent","finalPanInfo","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","hasTakenAnySnapshot","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","isObject","isSVGElement","compareByDepth","FlatTree","isDirty","sort","timeout","checkElapsed","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","animationCommitId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","innerWidth","resizeUnblockUpdate","newInnerWidth","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","targetStyle","visibility","pointerEvents","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","isElementKeyboardAccessible","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","motion","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","combineFunctions","transformers","numChildren","maxStaggerDuration","item","setVariants","variantLabels","animationControls","hasMounted","subscribers","setValues","useAnimation"],"sourceRoot":""}